{
	"name": "ADW_Extraction",
	"properties": {
		"activities": [
			{
				"name": "Lookup1",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": "select * from [dbo].[CTL_TABLE_SYNC] where effectiveDateColumnName is null\nand loadType = 'I'",
						"queryTimeout": "02:00:00"
					},
					"dataset": {
						"referenceName": "DS_ASQL_Destination",
						"type": "DatasetReference",
						"parameters": {
							"SchemaName": "T",
							"TableName": "T"
						}
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "ForEach1",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Lookup1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Lookup1').output.value",
						"type": "Expression"
					},
					"activities": [
						{
							"name": "Copy data1",
							"type": "Copy",
							"dependsOn": [
								{
									"activity": "UpdatCTLTableOnStart",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "SqlServerSource",
									"sqlReaderQuery": {
										"value": "@item().ColumnList",
										"type": "Expression"
									},
									"queryTimeout": "02:00:00"
								},
								"sink": {
									"type": "AzureSqlSink",
									"preCopyScript": {
										"value": "if exists (\nselect 1 from sys.objects where name = '@{item().TableName})')\n\nTruncate table @{item().DestinationSchema}.@{item().TableName}",
										"type": "Expression"
									},
									"tableOption": "autoCreate",
									"disableMetricsCollection": false
								},
								"enableStaging": false
							},
							"inputs": [
								{
									"referenceName": "DS_SQLServer_Source",
									"type": "DatasetReference",
									"parameters": {
										"SchemaName": {
											"value": "@item().SourceSchema",
											"type": "Expression"
										},
										"TableName": {
											"value": "@item().TableName",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "DS_ASQL_Destination",
									"type": "DatasetReference",
									"parameters": {
										"SchemaName": {
											"value": "@item().DestinationSchema",
											"type": "Expression"
										},
										"TableName": {
											"value": "@item().TableName",
											"type": "Expression"
										}
									}
								}
							]
						},
						{
							"name": "UpdatCTLTableOnStart",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[dbo].[USP_TableExtraction_OnStart]",
								"storedProcedureParameters": {
									"LoadType": {
										"value": {
											"value": "@pipeline().parameters.LoadType",
											"type": "Expression"
										},
										"type": "String"
									},
									"Status": {
										"value": "InProgress",
										"type": "String"
									},
									"tablename": {
										"value": {
											"value": "@item().TableName",
											"type": "Expression"
										},
										"type": "String"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "LS_ASQLDB",
								"type": "LinkedServiceReference"
							}
						},
						{
							"name": "UpdatCTLTableOnSuccess",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "Copy data1",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[dbo].[USP_TableExtraction_OnSuccess]",
								"storedProcedureParameters": {
									"Status": {
										"value": "Success",
										"type": "String"
									},
									"tablename": {
										"value": {
											"value": "@item().TableName",
											"type": "Expression"
										},
										"type": "String"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "LS_ASQLDB",
								"type": "LinkedServiceReference"
							}
						}
					]
				}
			},
			{
				"name": "Lookup1_copy1",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": "select * from [dbo].[CTL_TABLE_SYNC] where effectiveDateColumnName is not null",
						"queryTimeout": "02:00:00"
					},
					"dataset": {
						"referenceName": "DS_ASQL_Destination",
						"type": "DatasetReference",
						"parameters": {
							"SchemaName": "T",
							"TableName": "T"
						}
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "ForEach1_copy1",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Lookup1_copy1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Lookup1_copy1').output.value",
						"type": "Expression"
					},
					"activities": [
						{
							"name": "Copy data1_copy1",
							"type": "Copy",
							"dependsOn": [
								{
									"activity": "UpdatCTLTableOnStart_copy1",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "SqlServerSource",
									"sqlReaderQuery": {
										"value": "@{item().ColumnList} where @{item().effectiveDateColumnName} > = @{item().WatermarkValue}",
										"type": "Expression"
									},
									"queryTimeout": "02:00:00"
								},
								"sink": {
									"type": "AzureSqlSink",
									"preCopyScript": {
										"value": "if exists (\nselect 1 from sys.objects where name = '@{item().TableName})')\n\nTruncate table @{item().DestinationSchema}.@{item().TableName}",
										"type": "Expression"
									},
									"tableOption": "autoCreate",
									"disableMetricsCollection": false
								},
								"enableStaging": false
							},
							"inputs": [
								{
									"referenceName": "DS_SQLServer_Source",
									"type": "DatasetReference",
									"parameters": {
										"SchemaName": "t",
										"TableName": "t"
									}
								}
							],
							"outputs": [
								{
									"referenceName": "DS_ASQL_Destination",
									"type": "DatasetReference",
									"parameters": {
										"SchemaName": {
											"value": "@item().DestinationSchema",
											"type": "Expression"
										},
										"TableName": {
											"value": "@item().TableName",
											"type": "Expression"
										}
									}
								}
							]
						},
						{
							"name": "UpdatCTLTableOnStart_copy1",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[dbo].[USP_TableExtraction_OnStart]",
								"storedProcedureParameters": {
									"LoadType": {
										"value": {
											"value": "@pipeline().parameters.LoadType",
											"type": "Expression"
										},
										"type": "String"
									},
									"Status": {
										"value": "InProgress",
										"type": "String"
									},
									"tablename": {
										"value": {
											"value": "@item().TableName",
											"type": "Expression"
										},
										"type": "String"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "LS_ASQLDB",
								"type": "LinkedServiceReference"
							}
						},
						{
							"name": "UpdatCTLTableOnSuccess_copy1",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "Copy data1_copy1",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[dbo].[USP_TableExtraction_OnSuccess]",
								"storedProcedureParameters": {
									"Status": {
										"value": "Success",
										"type": "String"
									},
									"tablename": {
										"value": {
											"value": "@item().TableName",
											"type": "Expression"
										},
										"type": "String"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "LS_ASQLDB",
								"type": "LinkedServiceReference"
							}
						}
					]
				}
			}
		],
		"parameters": {
			"LoadType": {
				"type": "string",
				"defaultValue": "F"
			}
		},
		"annotations": []
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}